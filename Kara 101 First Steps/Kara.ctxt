#BlueJ class context
comment0.target=Kara
comment0.text=\n\ This\ is\ the\ superclass\ for\ all\ Karas\ containing\ the\ basic\ Kara\ methods.\n\ Programs\ should\ only\ be\ written\ in\ subclasses\ (e.g.\ MyKara).\n\ <p>\n\ \n\ <i>Diese\ Klasse\ ist\ die\ Oberklasse\ fuer\ alle\ Karas\ und\ enthaelt\ die\n\ Grundfunktionen\ von\ Kara.\ Programme\ sollten\ nur\ in\ den\ Unterklassen\ wie\n\ MyKara\ geschrieben\ werden.</i>\n\ \n\ @author\ Marco\ Jakob\ (http\://code.makery.ch)\n
comment1.params=
comment1.target=void\ move()
comment1.text=\n\ Kara\ makes\ a\ step\ in\ the\ current\ direction\ <br>\n\ <i>Kara\ macht\ einen\ Schritt\ in\ die\ aktuelle\ Richtung</i>\n
comment10.params=
comment10.target=boolean\ mushroomFront()
comment10.text=\n\ Kara\ checks\ if\ there\ is\ a\ mushroom\ in\ front\ of\ him\ <br>\n\ <i>Kara\ schaut\ nach,\ ob\ er\ einen\ Pilz\ vor\ sich\ hat</i>\n\ \n\ @return\ true\ if\ a\ mushroom\ is\ in\ front\ of\ a\ Kara,\ false\ otherwise\n
comment11.params=
comment11.target=void\ stop()
comment11.text=\n\ Stops\ the\ simulation\ cycle\ (the\ act()-method\ is\ finished\ first)\ <br>\n\ <i>Stoppt\ die\ Simulation\ (die\ act()-Methode\ wird\ noch\ bis\ unten\ ausgefuehrt)</i>\n
comment12.params=englishMessage\ germanMessage
comment12.target=void\ showWarning(java.lang.String,\ java.lang.String)
comment12.text=\n\ Shows\ a\ popup\ with\ a\ warning\ message\ containing\ both\ the\ english\ or\n\ german\ message.\n
comment13.params=direction\ steps\ clazz
comment13.target=java.lang.Object\ getObjectInFront(int,\ int,\ java.lang.Class)
comment13.text=\n\ Finds\ an\ object\ in\ the\ specified\ direction.\n\ \n\ @param\ direction\n\ \ \ \ \ \ \ \ \ \ \ \ the\ direction\ in\ which\ to\ look\ for\ the\ object\n\ @param\ steps\n\ \ \ \ \ \ \ \ \ \ \ \ number\ of\ cells\ to\ look\ ahead\ (1\ means\ the\ next\ field,\ etc.)\n\ @param\ clazz\n\ \ \ \ \ \ \ \ \ \ \ \ the\ (actor)\ class\ to\ look\ for\n\ @return\ the\ object\ that\ was\ found\ or\ null\ if\ none\ was\ found\n
comment14.params=actor\ direction
comment14.target=void\ moveActor(greenfoot.Actor,\ int)
comment14.text=\n\ Moves\ the\ actor\ one\ step\ in\ the\ specified\ direction.\n\ \n\ @param\ actor\n\ \ \ \ \ \ \ \ \ \ \ \ the\ actor\ to\ be\ moved\n\ @param\ direction\n\ \ \ \ \ \ \ \ \ \ \ \ the\ direction\ to\ move\n
comment15.params=a\ b
comment15.target=int\ modulo(int,\ int)
comment15.text=\n\ A\ special\ modulo\ operation\ that\ never\ returns\ a\ negative\ number.\ This\ is\n\ necessary\ to\ always\ stay\ inside\ the\ grid\ of\ the\ world.\n\ <p>\n\ The\ Java\ modulo\ operation\ would\ return\ -1\ for\ something\ like\ -1%10,\ but\n\ we\ would\ need\ 9.\n\ <p>\n\ Note\:\ Depending\ on\ the\ programming\ language,\ the\ modulo\ operation\ for\n\ negative\ numbers\ is\ defined\ differently.\n\ \n\ @param\ a\n\ \ \ \ \ \ \ \ \ \ \ \ the\ first\ operand\n\ @param\ b\n\ \ \ \ \ \ \ \ \ \ \ \ the\ second\ operand\n\ @return\ the\ result\ of\ the\ modulo\ operation,\ always\ positive\n
comment2.params=
comment2.target=void\ turnLeft()
comment2.text=\n\ Kara\ turns\ left\ by\ 90\ degrees\ <br>\n\ <i>Kara\ dreht\ sich\ um\ 90\u00B0\ nach\ links</i>\n
comment3.params=
comment3.target=void\ turnRight()
comment3.text=\n\ Kara\ turns\ right\ by\ 90\ degrees\ <br>\n\ <i>Kara\ dreht\ sich\ um\ 90\u00B0\ nach\ rechts</i>\n
comment4.params=
comment4.target=void\ putLeaf()
comment4.text=\n\ Kara\ puts\ down\ a\ leaf\ <br>\n\ <i>Kara\ legt\ ein\ neues\ Kleeblatt\ an\ die\ Position,\ auf\ der\ er\ sich\n\ befindet</i>\n
comment5.params=
comment5.target=void\ removeLeaf()
comment5.text=\n\ Kara\ picks\ up\ a\ leaf\ <br>\n\ <i>Kara\ entfernt\ ein\ unter\ ihm\ liegendes\ Kleeblatt</i>\n
comment6.params=
comment6.target=boolean\ onLeaf()
comment6.text=\n\ Kara\ checks\ if\ he\ stands\ on\ a\ leaf\ <br>\n\ <i>Kara\ schaut\ nach,\ ob\ er\ sich\ auf\ einem\ Kleeblatt\ befindet</i>\n\ \n\ @return\ true\ if\ Kara\ stands\ on\ a\ leaf,\ false\ otherwise\n
comment7.params=
comment7.target=boolean\ treeFront()
comment7.text=\n\ Kara\ checks\ if\ there\ is\ a\ tree\ in\ front\ of\ him\ <br>\n\ <i>Kara\ schaut\ nach,\ ob\ sich\ ein\ Baum\ vor\ ihm\ befindet</i>\n\ \n\ @return\ true\ if\ there\ is\ a\ tree\ in\ front\ of\ Kara,\ false\ otherwise\n
comment8.params=
comment8.target=boolean\ treeLeft()
comment8.text=\n\ Kara\ checks\ if\ there\ is\ a\ tree\ on\ his\ left\ side\ <br>\n\ <i>Kara\ schaut\ nach,\ ob\ sich\ ein\ Baum\ links\ von\ ihm\ befindet</i>\n\ \n\ @return\ true\ if\ Kara\ has\ a\ tree\ on\ his\ left,\ false\ otherwise\n
comment9.params=
comment9.target=boolean\ treeRight()
comment9.text=\n\ Kara\ checks\ if\ there\ is\ a\ tree\ on\ his\ right\ side\ <br>\n\ <i>Kara\ schaut\ nach,\ ob\ sich\ ein\ Baum\ rechts\ von\ ihm\ befindet</i>\n\ \n\ @return\ true\ if\ Kara\ has\ a\ tree\ on\ his\ right,\ false\ otherwise\n
numComments=16
